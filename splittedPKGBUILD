# Maintainer: Samuele Disegna <smldis at gmail dot com>

pkgname=('opensync-plugins-evolution2-svn' \
	 'opensync-plugins-file-svn'  \
	 'opensync-plugins-syncml-svn' \
	 )
pkgbase="opensync-plugins-svn"
pkgver=6100
pkgrel=1
pkgdesc="Development version of the OpenSync synchronisation framework plugins"
arch=('i686' 'x86_64')
url="http://www.opensync.org"
license=('LGPL2')
depends=('libopensync-svn')
makedepends=('subversion' 'cmake')
conflicts=('libopensync-plugins' 'opensync-plugins')
replaces=('libopensync-plugins-svn')
source=()
md5sums=()

PKGEXT=".tar"

_svnmod="plugins"
_svntrunk="https://svn.opensync.org/plugins"

build() {
  msg "Connecting to $_svntrunk SVN server...."
  svn co $_svntrunk $srcdir/$_svnmod -r $pkgver
  msg "SVN checkout done or server timeout"

  [ -d $startdir/plugins ] && rm -fr $startdir/plugins
  mkdir $startdir/plugins
  cp -r $srcdir/$_svnmod/* $startdir/plugins

  return 0
}

package_opensync-plugins-evolution2-svn()
{

  pkgdesc="Development version of OpenSync Evolution2 plugin"
  depends=('libopensync-svn' 'glib2' 'evolution-data-server')
  provides=('libopensync-plugin-evolution2')
  conflicts=('libopensync-plugins' 'opensync-plugins' 'libopensync-plugin-evolution2')

  cd $startdir/plugins/evolution2
  mkdir build
  cd build
  cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release || return 1
  make || return 1
  make DESTDIR=$pkgdir install || return 1
}

package_opensync-plugins-file-svn()
{

  pkgdesc="Development version of file plugin for OpenSync"
  depends=('libopensync-svn' 'libxml2' 'glib2')
  provides=('libopensync-plugin-file')
  conflicts=('libopensync-plugins' 'opensync-plugins' 'libopensync-plugin-file')

  cd $startdir/plugins/file-sync
  mkdir build
  cd build
  cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release || return 1
  make || return 1
  make DESTDIR=$pkgdir install || return 1
}

package_opensync-plugins-syncml-svn()
{

  pkgdesc="Development version of Syncml plugin for OpenSync"
  depends=('libopensync-svn' 'libsyncml-svn' 'libxml2' 'glib2')
  provides=('libopensync-plugin-syncml')
  conflicts=('libopensync-plugins' 'opensync-plugins' 'libopensync-plugin-syncml')

  cd $startdir/plugins/syncml/trunk
  mkdir build
  cd build
  cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release || return 1
  make || return 1
  make DESTDIR=$pkgdir install || return 1
}